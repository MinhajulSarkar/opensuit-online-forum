spring.mvc.favicon.enabled=false
spring.datasource.url = jdbc:mysql://localhost:3306/forum
#spring.datasource.url = jdbc:mysql://127.5.101.2:3306/opensuite

# Username and password
spring.datasource.username = root
spring.datasource.password = medisys
#spring.datasource.username = adminNCk4kGa
#spring.datasource.password = XjpzLakK2kzU

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect






# ========================
# APPLICATION
# ========================

# Directory where will be saved uploaded files. Make sure that the application 
# have write permissions on such directory.
netgloo.paths.uploadedFiles = E:/Desktop

# ========================
# SPRING BOOT: MULTIPART
# ========================

# Set the file size limit (default 1Mb). If you want to specify that files be 
# unlimited set the multipart.maxFileSize property to -1.
multipart.maxFileSize = 3Mb

# Set the total request size for a multipart/form-data (default 10Mb)
#multipart.maxRequestSize = 10Mb

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, rr.role from user u left outer join user_role r on u.user_id=r.user_id left outer join role rr on  r.role_id=rr.role_id  where u.email=?

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.cache=false